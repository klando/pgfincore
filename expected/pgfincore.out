CREATE EXTENSION pgfincore;
--
-- test SYSCONF
--
select from pgsysconf();
--
(1 row)

select from pgsysconf_pretty();
--
(1 row)

--
-- make a temp table to use below
--
CREATE TEMP TABLE test AS SELECT generate_series(1,256) as a;
--
-- this is not perfect testing but it is hard to predict what the OS will do
-- for *sure*
--
--
-- test fadvise_loader
--
select from pgfadvise_loader('test', 0, true, true, B'1010');
--
(1 row)

select from pgfadvise_loader('test', 0, true, false, B'1010');
--
(1 row)

select from pgfadvise_loader('test', 0, false, true, B'1010');
--
(1 row)

select from pgfadvise_loader('test', 0, false, false, B'1010');
--
(1 row)

-- must not fail on empty databit input
select from pgfadvise_loader('test', 0, false, false, B'');
--
(1 row)

-- ERROR on NULL databit input
select from pgfadvise_loader('test', 0, false, false, NULL);
ERROR:  pgfadvise_loader: databit argument shouldn't be NULL
CONTEXT:  SQL function "pgfadvise_loader" statement 1
--
-- test pgfincore
--
select from pgfincore('test', true);
--
(1 row)

select from pgfincore('test');
--
(1 row)

--
-- test DONTNEED, WILLNEED
--
select from pgfadvise_willneed('test');
--
(1 row)

select from pgfadvise_dontneed('test');
--
(1 row)

--
-- test PGFADVISE flags
--
select from pgfadvise_sequential('test');
--
(1 row)

select from pgfadvise_random('test');
--
(1 row)

select from pgfadvise_normal('test');
--
(1 row)

--
-- tests drawers
--
select NULL || pgfincore_drawer(databit) from pgfincore('test','main',true);
 ?column? 
----------
 
(1 row)

--
-- tests vm_cachestat
--
-- Test bad parameters
select * from vm_cachestat(NULL, NULL, -1, -1);
ERROR:  relation cannot be NULL
HINT:  check parameters
select * from vm_cachestat('test', NULL, -1, -1);
ERROR:  relation fork cannot be NULL
HINT:  check parameters
select * from vm_cachestat('test', 'vm', -1, -1);
ERROR:  fork "vm" does not exist for the relation "test"
HINT:  check parameters
select * from vm_cachestat('test', 'main', -1, -1);
ERROR:  starting block number cannot be negative
HINT:  check parameters
select * from vm_cachestat('test', 'main', NULL, -1);
ERROR:  number of blocks cannot be negative
HINT:  check parameters
select * from vm_cachestat('test', 'main', 10, NULL);
ERROR:  starting block (10) cannot be greater than number of blocks in relation (2)
HINT:  check parameters
select * from vm_cachestat('test', 'main', 0, 10);
ERROR:  starting block (0) and number of blocks (10) cannot be greater than number of blocks in relation (2)
HINT:  check parameters
-- Working cases
select from pgfadvise_loader('test', 0, true, true, B'1111');
--
(1 row)

select (pgfincore('test')).pages_mem, (vm_cachestat('test', 'main', NULL, NULL)).nr_cache;
 pages_mem | nr_cache 
-----------+----------
         4 |        4
(1 row)

select from pgfadvise_loader('test', 0, true, true, B'1000');
--
(1 row)

select (pgfincore('test')).pages_mem, (vm_cachestat('test', 'main', NULL, NULL)).nr_cache;
 pages_mem | nr_cache 
-----------+----------
         1 |        1
(1 row)

select from pgfadvise_loader('test', 0, true, true, B'0000');
--
(1 row)

select (pgfincore('test')).pages_mem, (vm_cachestat('test', 'main', NULL, NULL)).nr_cache;
 pages_mem | nr_cache 
-----------+----------
         0 |        0
(1 row)

--
-- tests vm_fadvise
--
-- Test bad parameters
select vm_fadvise(NULL, NULL, -1, -1, 'badflag');
ERROR:  relation cannot be NULL
HINT:  check parameters
select vm_fadvise('test', NULL, -1, -1, 'badflag');
ERROR:  relation fork cannot be NULL
HINT:  check parameters
select vm_fadvise('test', 'vm', -1, -1, 'badflag');
ERROR:  starting block number cannot be negative
HINT:  check parameters
select vm_fadvise('test', 'main', -1, -1, 'badflag');
ERROR:  starting block number cannot be negative
HINT:  check parameters
select vm_fadvise('test', 'main', NULL, -1, 'badflag');
ERROR:  number of blocks cannot be negative
HINT:  check parameters
select vm_fadvise('test', 'main', 10, NULL, 'badflag');
ERROR:  Invalid advice string: badflag
HINT:  check parameters
select vm_fadvise('test', 'main', 0, 10, 'badflag');
ERROR:  Invalid advice string: badflag
HINT:  check parameters
select vm_fadvise('test', 'main', 0, 2, 'POSIX_FADV_NOREUSE');
ERROR:  POSIX_FADV_NOREUSE is no-op
-- Working cases
select vm_fadvise('test', 'main', 0, 2, 'POSIX_FADV_NORMAL');
 vm_fadvise 
------------
 
(1 row)

select vm_fadvise('test', 'main', 0, 2, 'POSIX_FADV_SEQUENTIAL');
 vm_fadvise 
------------
 
(1 row)

select vm_fadvise('test', 'main', 0, 2, 'POSIX_FADV_RANDOM');
 vm_fadvise 
------------
 
(1 row)

select vm_fadvise('test', 'main', 0, 2, 'POSIX_FADV_DONTNEED');
 vm_fadvise 
------------
 
(1 row)

select (pgfincore('test')).pages_mem;
 pages_mem 
-----------
         0
(1 row)

select vm_fadvise('test', 'main', 0, 2, 'POSIX_FADV_WILLNEED');
 vm_fadvise 
------------
 
(1 row)

select (pgfincore('test')).pages_mem;
 pages_mem 
-----------
         4
(1 row)

